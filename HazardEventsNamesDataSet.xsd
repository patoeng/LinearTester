<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="HazardEventsNamesDataSet" targetNamespace="http://tempuri.org/HazardEventsNamesDataSet.xsd" xmlns:mstns="http://tempuri.org/HazardEventsNamesDataSet.xsd" xmlns="http://tempuri.org/HazardEventsNamesDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="HazardEventsNamesConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="HazardEventsNamesConnectionString (MySettings)" PropertyReference="ApplicationSettings.XS156LinearTesterPole.My.MySettings.GlobalReference.Default.HazardEventsNamesConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HazardNamesTableAdapter" GeneratorDataComponentClassName="HazardNamesTableAdapter" Name="HazardNames" UserDataComponentName="HazardNamesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HazardEventsNamesConnectionString (MySettings)" DbObjectName="HazardNames" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `HazardNames` WHERE ((`Code` = ?) AND ((? = 1 AND `Text` IS NULL) OR (`Text` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="Original_Code" Precision="0" ProviderType="Double" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Text" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Text" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Text" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Text" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `HazardNames` (`Code`, `Text`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="Code" Precision="0" ProviderType="Double" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Text" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Text" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Code, [Text] FROM HazardNames</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `HazardNames` SET `Code` = ?, `Text` = ? WHERE ((`Code` = ?) AND ((? = 1 AND `Text` IS NULL) OR (`Text` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="Code" Precision="0" ProviderType="Double" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Text" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Text" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="Original_Code" Precision="0" ProviderType="Double" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Text" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Text" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Text" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Text" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Code" DataSetColumn="Code" />
              <Mapping SourceColumn="Text" DataSetColumn="Text" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="HazardEventsNamesDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="HazardEventsNamesDataSet" msprop:Generator_UserDSName="HazardEventsNamesDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="HazardNames" msprop:Generator_TableClassName="HazardNamesDataTable" msprop:Generator_TableVarName="tableHazardNames" msprop:Generator_TablePropName="HazardNames" msprop:Generator_RowDeletingName="HazardNamesRowDeleting" msprop:Generator_UserTableName="HazardNames" msprop:Generator_RowChangingName="HazardNamesRowChanging" msprop:Generator_RowEvHandlerName="HazardNamesRowChangeEventHandler" msprop:Generator_RowDeletedName="HazardNamesRowDeleted" msprop:Generator_RowEvArgName="HazardNamesRowChangeEvent" msprop:Generator_RowChangedName="HazardNamesRowChanged" msprop:Generator_RowClassName="HazardNamesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Code" msprop:Generator_ColumnVarNameInTable="columnCode" msprop:Generator_ColumnPropNameInRow="Code" msprop:Generator_ColumnPropNameInTable="CodeColumn" msprop:Generator_UserColumnName="Code" type="xs:double" />
              <xs:element name="Text" msprop:Generator_ColumnVarNameInTable="columnText" msprop:Generator_ColumnPropNameInRow="Text" msprop:Generator_ColumnPropNameInTable="TextColumn" msprop:Generator_UserColumnName="Text" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:HazardNames" />
      <xs:field xpath="mstns:Code" />
    </xs:unique>
  </xs:element>
</xs:schema>